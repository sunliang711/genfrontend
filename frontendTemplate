{{ define "all" }}
{
    "log": {
        "access": "{{.Config.LogAccess}}",
        "error": "{{.Config.LogError}}",
        "loglevel": "{{.Config.Loglevel}}"
    },
    "inbounds": [
        {{- range $idx,$ele :=.Shadowsocks}}
        {{- if $idx}}, {{- end}}
        {
            "tag":"{{$ele.Tag}}",
            "protocol": "shadowsocks",
            "port": {{$ele.Port}},
            "settings": {
                "method": "{{$ele.Cipher}}",
                "password": "{{$ele.Password}}",
                "udp": {{$ele.UDP}},
                "network": "tcp,udp",
                "level": 0,
                "ota": false
            }
        }
        {{- end}}
        {{- range $idx,$ele :=.Vmess }}
            ,{
                "tag": "{{$ele.Tag}}",
                "port": {{$ele.Port}},
                "protocol": "vmess",
                "settings": {
                    "clients": [
                        {
                            "id": "{{$ele.UUID}}",
                            "alterId": {{$ele.AlterID}}
                        }
                    ]
                },
                "streamSettings": {
                    "network": "{{$ele.Network}}"
                }
            }
        {{- end}}
        {{- range $idx,$ele :=.Http}}
            ,{
                "tag": "{{$ele.Tag}}",
                "protocol": "http",
                "port": {{$ele.Port}},
                "settings": {
                    {{- if $ele.Username }}
                        "accounts": [
                            {
                                "user": "{{$ele.Username}}",
                                "pass": "{{$ele.Password}}"
                            }
                        ],
                    {{- end}}
                    "timeout": 0,
                    "userLevel": 0,
                    "allowTransparent": false
                },
                "sniffing": {
                    "enabled": true,
                    "destOverride": [
                        "http",
                        "tls"
                    ]
                }
            }
        {{- end}}
   
        {{- range $idx,$ele :=.Socks5}}
            ,{
                "tag":"{{$ele.Tag}}",
                "protocol": "socks",
                "port": {{$ele.Port}},
                "settings": {
                    "udp": {{$ele.UDP}},
                    "auth": "{{$ele.Auth}}",
                    {{- if $ele.Username}}
                    "accounts": [
                        {
                            "user": "{{$ele.Username}}",
                            "pass": "{{$ele.Password}}"
                        }
                    ],
                    {{- end}}
                    "userLevel": 0,
                    "ip": "0.0.0.0"
                },
                "sniffing": {
                    "enabled": true,
                    "destOverride": [
                        "http",
                        "tls"
                    ]
                }
            }
        {{- end}}
    ],
    "outbound": {
        {{- if or (eq .Outbound.Protocol "socks") (eq .Outbound.Protocol "http") }}

        "protocol": "{{.Outbound.Protocol}}",
        "settings": {
            "servers": [
                {
                    "address": "{{.Outbound.Server}}",
                    "port": {{.Outbound.Port}}
                    {{- if eq .Outbound.Auth "password" }}
                    ,"users":[
                        {
                            "user":"{{.Outbound.Username}}",
                            "pass":"{{.Outbound.Password}}"
                        }
                    ]
                    {{- end}}
                }
            ]
        },
        "streamSettings": {
            "sockopt": {
                "note":"for transparent proxy",
                "mark": 255
            }
        }

        {{- else if eq .Outbound.Protocol "vless" }}
        "protocol": "{{.Outbound.Protocol}}",
        "settings":{
            "vnext":[
                {
                    "address":"{{.Outbound.Server}}",
                    "port": {{.Outbound.Port}},
                    "users": [
                        {
                            "id": "{{.Outbound.UUID}}",
                            "flow": "{{.Outbound.Flow}}",
                            "encryption": "{{.Outbound.Encryption}}",
                            "level": {{.Outbound.Level}}
                        }
                    ]
                }
            ]
        },
        "streamSettings":{
            "network": "{{.Outbound.Network}}",
            "security": "{{.Outbound.Security}}",
            "xtlsSettings":{
                "serverName": "{{.Outbound.Server}}"
            }
        }
        {{- else if eq .Outbound.Protocol "file" }}
        {{.Outbound.File}}

        {{- end}}
    }
}
{{ end }}
